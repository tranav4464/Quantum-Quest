# Generated by Django 4.2.23 on 2025-08-04 12:22

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Goal name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Goal description')),
                ('goal_type', models.CharField(choices=[('savings', 'Savings Goal'), ('debt_payoff', 'Debt Payoff'), ('investment', 'Investment Goal'), ('purchase', 'Purchase Goal'), ('emergency_fund', 'Emergency Fund'), ('retirement', 'Retirement'), ('education', 'Education Fund'), ('vacation', 'Vacation Fund'), ('other', 'Other')], help_text='Type of financial goal', max_length=20)),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Target amount to achieve', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('current_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Current saved/achieved amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('start_date', models.DateField(help_text='Goal start date')),
                ('target_date', models.DateField(help_text='Target completion date')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', help_text='Goal priority level', max_length=20)),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('cancelled', 'Cancelled'), ('archived', 'Archived')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this goal is active')),
                ('auto_contribute', models.BooleanField(default=False, help_text='Enable automatic contributions')),
                ('auto_contribution_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Amount to contribute automatically', max_digits=10, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('auto_contribution_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-weekly'), ('monthly', 'Monthly')], help_text='Frequency of auto contributions', max_length=20, null=True)),
                ('goal_image', models.ImageField(blank=True, help_text='Goal image or icon', null=True, upload_to='goal_images/')),
                ('milestone_notifications', models.BooleanField(default=True, help_text='Send notifications on milestones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(help_text='User who owns this goal', on_delete=django.db.models.deletion.CASCADE, related_name='financial_goals', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal',
                'verbose_name_plural': 'Goals',
                'db_table': 'financial_goals',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Template name', max_length=200)),
                ('description', models.TextField(help_text='Template description')),
                ('goal_type', models.CharField(choices=[('savings', 'Savings Goal'), ('debt_payoff', 'Debt Payoff'), ('investment', 'Investment Goal'), ('purchase', 'Purchase Goal'), ('emergency_fund', 'Emergency Fund'), ('retirement', 'Retirement'), ('education', 'Education Fund'), ('vacation', 'Vacation Fund'), ('other', 'Other')], max_length=20)),
                ('default_target_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Default target amount', max_digits=15, null=True)),
                ('default_duration_months', models.IntegerField(blank=True, help_text='Default duration in months', null=True)),
                ('is_system_template', models.BooleanField(default=False, help_text='Whether this is a system template')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this template is active')),
                ('usage_count', models.IntegerField(default=0, help_text='How many times this template has been used')),
                ('template_data', models.JSONField(default=dict, help_text='Additional template configuration')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Goal Template',
                'verbose_name_plural': 'Goal Templates',
                'db_table': 'goal_templates',
                'ordering': ['-usage_count', 'name'],
            },
        ),
        migrations.CreateModel(
            name='GoalContribution',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, help_text='Contribution amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.CharField(help_text='Contribution description', max_length=255)),
                ('contribution_type', models.CharField(choices=[('manual', 'Manual'), ('automatic', 'Automatic'), ('transfer', 'Transfer')], default='manual', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('contribution_date', models.DateField(auto_now_add=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contributions', to='goals.goal')),
            ],
            options={
                'verbose_name': 'Goal Contribution',
                'verbose_name_plural': 'Goal Contributions',
                'db_table': 'goal_contributions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='GoalMilestone',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(help_text='Milestone name', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Milestone description')),
                ('target_amount', models.DecimalField(decimal_places=2, help_text='Target amount for this milestone', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('target_percentage', models.IntegerField(help_text='Target percentage for this milestone', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)])),
                ('is_achieved', models.BooleanField(default=False, help_text='Whether this milestone has been achieved')),
                ('achieved_at', models.DateTimeField(blank=True, help_text='When this milestone was achieved', null=True)),
                ('reward_description', models.TextField(blank=True, help_text='Reward for achieving this milestone')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('goal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='milestones', to='goals.goal')),
            ],
            options={
                'verbose_name': 'Goal Milestone',
                'verbose_name_plural': 'Goal Milestones',
                'db_table': 'goal_milestones',
                'ordering': ['target_percentage'],
                'unique_together': {('goal', 'target_percentage')},
            },
        ),
        migrations.CreateModel(
            name='GoalCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Category description')),
                ('color', models.CharField(default='#007bff', help_text='Category color (hex code)', max_length=7)),
                ('icon', models.CharField(blank=True, help_text='Category icon name', max_length=50)),
                ('sort_order', models.IntegerField(default=0, help_text='Sort order for display')),
                ('is_active', models.BooleanField(default=True, help_text='Whether this category is active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='goal_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Goal Category',
                'verbose_name_plural': 'Goal Categories',
                'db_table': 'goal_categories',
                'ordering': ['sort_order', 'name'],
                'unique_together': {('user', 'name')},
            },
        ),
    ]
