# Generated by Django 4.2.23 on 2025-08-02 13:47

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Unique identifier for the user', unique=True)),
                ('date_of_birth', models.DateField(blank=True, help_text="User's date of birth", null=True)),
                ('phone_number', models.CharField(blank=True, help_text="User's phone number", max_length=20, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('profile_picture', models.ImageField(blank=True, help_text="User's profile picture", null=True, upload_to='profiles/')),
                ('onboarding_completed', models.BooleanField(default=False, help_text='Whether the user has completed the onboarding process')),
                ('financial_profile', models.JSONField(blank=True, default=dict, help_text='JSON field containing financial preferences and profile data')),
                ('financial_health_score', models.IntegerField(default=0, help_text='Calculated financial health score (0-100)')),
                ('currency', models.CharField(default='USD', help_text="User's preferred currency", max_length=3)),
                ('timezone', models.CharField(default='UTC', help_text="User's timezone", max_length=50)),
                ('data_sharing_consent', models.BooleanField(default=False, help_text='User consent for data sharing for analytics')),
                ('marketing_emails', models.BooleanField(default=True, help_text='User preference for marketing emails')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='When the user account was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='When the user account was last updated')),
                ('email_verified', models.BooleanField(default=False, help_text="Whether the user's email has been verified")),
                ('phone_verified', models.BooleanField(default=False, help_text="Whether the user's phone has been verified")),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'auth_user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employment_status', models.CharField(blank=True, choices=[('employed', 'Employed'), ('self_employed', 'Self Employed'), ('unemployed', 'Unemployed'), ('student', 'Student'), ('retired', 'Retired')], max_length=20)),
                ('annual_income', models.DecimalField(blank=True, decimal_places=2, help_text="Annual income in user's preferred currency", max_digits=15, null=True)),
                ('primary_financial_goal', models.CharField(blank=True, choices=[('emergency_fund', 'Build Emergency Fund'), ('debt_payoff', 'Pay Off Debt'), ('save_for_home', 'Save for Home'), ('retirement', 'Retirement Planning'), ('investment', 'Investment Growth'), ('education', 'Education Fund')], max_length=50)),
                ('risk_tolerance', models.CharField(choices=[('conservative', 'Conservative'), ('moderate', 'Moderate'), ('aggressive', 'Aggressive')], default='moderate', max_length=20)),
                ('investment_experience', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced')], default='beginner', max_length=20)),
                ('budget_alerts', models.BooleanField(default=True, help_text='Receive alerts when approaching budget limits')),
                ('goal_reminders', models.BooleanField(default=True, help_text='Receive reminders about financial goals')),
                ('weekly_reports', models.BooleanField(default=True, help_text='Receive weekly financial reports')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profiles',
            },
        ),
    ]
