# Generated by Django 4.2.23 on 2025-08-02 13:47

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Budget',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Budget name', max_length=100)),
                ('description', models.TextField(blank=True, help_text='Budget description')),
                ('period', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], default='monthly', help_text='Budget period', max_length=20)),
                ('total_amount', models.DecimalField(decimal_places=2, help_text='Total budget amount', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('start_date', models.DateField(help_text='Budget start date')),
                ('end_date', models.DateField(help_text='Budget end date')),
                ('status', models.CharField(choices=[('active', 'Active'), ('paused', 'Paused'), ('completed', 'Completed'), ('archived', 'Archived')], default='active', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this budget is active')),
                ('alert_at_percentage', models.IntegerField(default=80, help_text='Alert when spending reaches this percentage')),
                ('alert_enabled', models.BooleanField(default=True, help_text='Whether alerts are enabled')),
                ('auto_renew', models.BooleanField(default=False, help_text='Whether to automatically renew this budget')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Budget',
                'verbose_name_plural': 'Budgets',
                'db_table': 'budgets',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_type', models.CharField(choices=[('budget_threshold', 'Budget Threshold'), ('category_threshold', 'Category Threshold'), ('budget_exceeded', 'Budget Exceeded'), ('category_exceeded', 'Category Exceeded')], max_length=30)),
                ('title', models.CharField(help_text='Alert title', max_length=255)),
                ('message', models.TextField(help_text='Alert message')),
                ('threshold_percentage', models.IntegerField(blank=True, help_text='Threshold percentage that triggered the alert', null=True)),
                ('current_percentage', models.DecimalField(decimal_places=2, help_text='Current spending percentage when alert was created', max_digits=5)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('sent', 'Sent'), ('acknowledged', 'Acknowledged'), ('dismissed', 'Dismissed')], default='pending', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_at', models.DateTimeField(blank=True, null=True)),
                ('acknowledged_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Budget Alert',
                'verbose_name_plural': 'Budget Alerts',
                'db_table': 'budget_alerts',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('monthly', 'Monthly Report'), ('quarterly', 'Quarterly Report'), ('yearly', 'Yearly Report'), ('custom', 'Custom Period Report')], max_length=20)),
                ('title', models.CharField(help_text='Report title', max_length=255)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('report_data', models.JSONField(default=dict, help_text='Generated report data in JSON format')),
                ('report_file', models.FileField(blank=True, help_text='Generated report file (PDF, etc.)', null=True, upload_to='budget_reports/')),
                ('is_generated', models.BooleanField(default=False, help_text='Whether the report has been generated')),
                ('generated_at', models.DateTimeField(blank=True, help_text='When the report was generated', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='budgets.budget')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='budget_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Budget Report',
                'verbose_name_plural': 'Budget Reports',
                'db_table': 'budget_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BudgetCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocated_amount', models.DecimalField(decimal_places=2, help_text='Amount allocated to this category', max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('alert_at_percentage', models.IntegerField(default=80, help_text='Alert when category spending reaches this percentage')),
                ('notes', models.TextField(blank=True, help_text='Notes about this category allocation')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('budget', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='category_allocations', to='budgets.budget')),
            ],
            options={
                'verbose_name': 'Budget Category',
                'verbose_name_plural': 'Budget Categories',
                'db_table': 'budget_categories',
            },
        ),
    ]
