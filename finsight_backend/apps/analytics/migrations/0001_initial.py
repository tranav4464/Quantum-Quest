# Generated by Django 4.2.23 on 2025-08-02 13:47

from decimal import Decimal
from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CategoryAnalytics',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('analysis_month', models.DateField(help_text='Month being analyzed (YYYY-MM-01)')),
                ('total_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total amount spent in this category', max_digits=15)),
                ('transaction_count', models.IntegerField(default=0, help_text='Number of transactions in this category')),
                ('average_transaction_amount', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Average transaction amount', max_digits=15)),
                ('previous_month_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Amount spent in previous month', max_digits=15)),
                ('percentage_change', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Percentage change from previous month', max_digits=8)),
                ('budgeted_amount', models.DecimalField(blank=True, decimal_places=2, help_text='Budgeted amount for this category', max_digits=15, null=True)),
                ('budget_variance', models.DecimalField(blank=True, decimal_places=2, help_text='Variance from budget (positive = over budget)', max_digits=15, null=True)),
                ('most_frequent_merchant', models.CharField(blank=True, help_text='Most frequent merchant in this category', max_length=255)),
                ('merchant_frequency_count', models.IntegerField(default=0, help_text='Number of transactions with most frequent merchant')),
                ('peak_spending_day', models.CharField(blank=True, help_text='Day of week with highest spending', max_length=20)),
                ('peak_spending_time', models.TimeField(blank=True, help_text='Time of day with highest spending', null=True)),
                ('trend_data', models.JSONField(default=dict, help_text='Detailed trend analysis data')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Category Analytics',
                'verbose_name_plural': 'Category Analytics',
                'db_table': 'category_analytics',
                'ordering': ['-analysis_month'],
            },
        ),
        migrations.CreateModel(
            name='FinancialInsight',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('insight_type', models.CharField(choices=[('spending_alert', 'Spending Alert'), ('savings_opportunity', 'Savings Opportunity'), ('budget_recommendation', 'Budget Recommendation'), ('goal_suggestion', 'Goal Suggestion'), ('investment_tip', 'Investment Tip'), ('debt_strategy', 'Debt Strategy'), ('financial_milestone', 'Financial Milestone'), ('trend_analysis', 'Trend Analysis')], help_text='Type of financial insight', max_length=30)),
                ('title', models.CharField(help_text='Insight title', max_length=255)),
                ('description', models.TextField(help_text='Detailed insight description')),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=20)),
                ('is_actionable', models.BooleanField(default=True, help_text='Whether this insight has actionable recommendations')),
                ('recommended_actions', models.JSONField(default=list, help_text='List of recommended actions')),
                ('data_sources', models.JSONField(default=list, help_text='Data sources used to generate this insight')),
                ('potential_savings', models.DecimalField(blank=True, decimal_places=2, help_text='Potential savings from this insight', max_digits=15, null=True)),
                ('impact_score', models.IntegerField(default=0, help_text='Impact score (0-100)')),
                ('is_viewed', models.BooleanField(default=False, help_text='Whether user has viewed this insight')),
                ('is_dismissed', models.BooleanField(default=False, help_text='Whether user has dismissed this insight')),
                ('is_acted_upon', models.BooleanField(default=False, help_text='Whether user has acted on this insight')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('viewed_at', models.DateTimeField(blank=True, null=True)),
                ('dismissed_at', models.DateTimeField(blank=True, null=True)),
                ('acted_upon_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'verbose_name': 'Financial Insight',
                'verbose_name_plural': 'Financial Insights',
                'db_table': 'financial_insights',
                'ordering': ['-priority', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_type', models.CharField(choices=[('monthly_summary', 'Monthly Summary'), ('spending_analysis', 'Spending Analysis'), ('budget_performance', 'Budget Performance'), ('goal_progress', 'Goal Progress'), ('net_worth_statement', 'Net Worth Statement'), ('cash_flow', 'Cash Flow Report'), ('investment_summary', 'Investment Summary'), ('tax_summary', 'Tax Summary'), ('custom', 'Custom Report')], help_text='Type of financial report', max_length=30)),
                ('title', models.CharField(help_text='Report title', max_length=255)),
                ('description', models.TextField(blank=True, help_text='Report description')),
                ('period_start', models.DateField(help_text='Report period start date')),
                ('period_end', models.DateField(help_text='Report period end date')),
                ('report_config', models.JSONField(default=dict, help_text='Report configuration parameters')),
                ('report_data', models.JSONField(default=dict, help_text='Generated report data')),
                ('report_format', models.CharField(choices=[('pdf', 'PDF'), ('excel', 'Excel'), ('csv', 'CSV'), ('json', 'JSON')], default='pdf', max_length=10)),
                ('report_file', models.FileField(blank=True, help_text='Generated report file', null=True, upload_to='financial_reports/')),
                ('is_generated', models.BooleanField(default=False, help_text='Whether the report has been generated')),
                ('generation_status', models.CharField(choices=[('pending', 'Pending'), ('generating', 'Generating'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True, help_text='Error message if generation failed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Financial Report',
                'verbose_name_plural': 'Financial Reports',
                'db_table': 'financial_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='FinancialSnapshot',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('snapshot_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly'), ('yearly', 'Yearly')], help_text='Type of snapshot', max_length=20)),
                ('snapshot_date', models.DateField(help_text='Date of the snapshot')),
                ('total_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total income for the period', max_digits=15)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total expenses for the period', max_digits=15)),
                ('net_income', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Net income (income - expenses)', max_digits=15)),
                ('total_assets', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total assets value', max_digits=15)),
                ('total_liabilities', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total liabilities value', max_digits=15)),
                ('net_worth', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Net worth (assets - liabilities)', max_digits=15)),
                ('total_savings', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total savings amount', max_digits=15)),
                ('total_investments', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total investments value', max_digits=15)),
                ('total_goal_progress', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total progress towards goals', max_digits=15)),
                ('total_budget_allocated', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total budget allocated', max_digits=15)),
                ('total_budget_spent', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total budget spent', max_digits=15)),
                ('financial_health_score', models.IntegerField(default=0, help_text='Financial health score (0-100)')),
                ('snapshot_data', models.JSONField(default=dict, help_text='Detailed snapshot data in JSON format')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Financial Snapshot',
                'verbose_name_plural': 'Financial Snapshots',
                'db_table': 'financial_snapshots',
                'ordering': ['-snapshot_date'],
            },
        ),
        migrations.CreateModel(
            name='SpendingPattern',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('pattern_type', models.CharField(choices=[('category_trend', 'Category Spending Trend'), ('monthly_pattern', 'Monthly Spending Pattern'), ('seasonal_pattern', 'Seasonal Pattern'), ('day_of_week', 'Day of Week Pattern'), ('merchant_frequency', 'Merchant Frequency'), ('amount_distribution', 'Amount Distribution')], help_text='Type of spending pattern', max_length=30)),
                ('analysis_start_date', models.DateField(help_text='Start date of analysis period')),
                ('analysis_end_date', models.DateField(help_text='End date of analysis period')),
                ('pattern_data', models.JSONField(default=dict, help_text='Pattern analysis data in JSON format')),
                ('insights', models.JSONField(default=list, help_text='Key insights from the pattern analysis')),
                ('confidence_score', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Confidence score for the pattern (0-100)', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Spending Pattern',
                'verbose_name_plural': 'Spending Patterns',
                'db_table': 'spending_patterns',
                'ordering': ['-created_at'],
            },
        ),
    ]
